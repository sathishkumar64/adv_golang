// Code generated by protoc-gen-go. DO NOT EDIT.
// source: buildInfo.proto

package grpc_exmp

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type BuildRequest struct {
	BuildId              string   `protobuf:"bytes,1,opt,name=buildId,proto3" json:"buildId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BuildRequest) Reset()         { *m = BuildRequest{} }
func (m *BuildRequest) String() string { return proto.CompactTextString(m) }
func (*BuildRequest) ProtoMessage()    {}
func (*BuildRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_92dbc3ae99c71c1d, []int{0}
}

func (m *BuildRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BuildRequest.Unmarshal(m, b)
}
func (m *BuildRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BuildRequest.Marshal(b, m, deterministic)
}
func (m *BuildRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BuildRequest.Merge(m, src)
}
func (m *BuildRequest) XXX_Size() int {
	return xxx_messageInfo_BuildRequest.Size(m)
}
func (m *BuildRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_BuildRequest.DiscardUnknown(m)
}

var xxx_messageInfo_BuildRequest proto.InternalMessageInfo

func (m *BuildRequest) GetBuildId() string {
	if m != nil {
		return m.BuildId
	}
	return ""
}

type BuildResponse struct {
	BuildId              string   `protobuf:"bytes,1,opt,name=buildId,proto3" json:"buildId,omitempty"`
	OsName               string   `protobuf:"bytes,2,opt,name=osName,proto3" json:"osName,omitempty"`
	Buildstatus          bool     `protobuf:"varint,3,opt,name=buildstatus,proto3" json:"buildstatus,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BuildResponse) Reset()         { *m = BuildResponse{} }
func (m *BuildResponse) String() string { return proto.CompactTextString(m) }
func (*BuildResponse) ProtoMessage()    {}
func (*BuildResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_92dbc3ae99c71c1d, []int{1}
}

func (m *BuildResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BuildResponse.Unmarshal(m, b)
}
func (m *BuildResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BuildResponse.Marshal(b, m, deterministic)
}
func (m *BuildResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BuildResponse.Merge(m, src)
}
func (m *BuildResponse) XXX_Size() int {
	return xxx_messageInfo_BuildResponse.Size(m)
}
func (m *BuildResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_BuildResponse.DiscardUnknown(m)
}

var xxx_messageInfo_BuildResponse proto.InternalMessageInfo

func (m *BuildResponse) GetBuildId() string {
	if m != nil {
		return m.BuildId
	}
	return ""
}

func (m *BuildResponse) GetOsName() string {
	if m != nil {
		return m.OsName
	}
	return ""
}

func (m *BuildResponse) GetBuildstatus() bool {
	if m != nil {
		return m.Buildstatus
	}
	return false
}

func init() {
	proto.RegisterType((*BuildRequest)(nil), "grpc_exmp.BuildRequest")
	proto.RegisterType((*BuildResponse)(nil), "grpc_exmp.BuildResponse")
}

func init() { proto.RegisterFile("buildInfo.proto", fileDescriptor_92dbc3ae99c71c1d) }

var fileDescriptor_92dbc3ae99c71c1d = []byte{
	// 173 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x4f, 0x2a, 0xcd, 0xcc,
	0x49, 0xf1, 0xcc, 0x4b, 0xcb, 0xd7, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0xe2, 0x4c, 0x2f, 0x2a,
	0x48, 0x8e, 0x4f, 0xad, 0xc8, 0x2d, 0x50, 0xd2, 0xe0, 0xe2, 0x71, 0x02, 0xc9, 0x06, 0xa5, 0x16,
	0x96, 0xa6, 0x16, 0x97, 0x08, 0x49, 0x70, 0xb1, 0x43, 0x54, 0xa7, 0x48, 0x30, 0x2a, 0x30, 0x6a,
	0x70, 0x06, 0xc1, 0xb8, 0x4a, 0xc9, 0x5c, 0xbc, 0x50, 0x95, 0xc5, 0x05, 0xf9, 0x79, 0xc5, 0xa9,
	0xb8, 0x95, 0x0a, 0x89, 0x71, 0xb1, 0xe5, 0x17, 0xfb, 0x25, 0xe6, 0xa6, 0x4a, 0x30, 0x81, 0x25,
	0xa0, 0x3c, 0x21, 0x05, 0x2e, 0x6e, 0xb0, 0x92, 0xe2, 0x92, 0xc4, 0x92, 0xd2, 0x62, 0x09, 0x66,
	0x05, 0x46, 0x0d, 0x8e, 0x20, 0x64, 0x21, 0x23, 0x3f, 0x2e, 0x2e, 0xf7, 0xd4, 0x12, 0xdf, 0x4a,
	0xb0, 0x4d, 0x42, 0x0e, 0x5c, 0xdc, 0xb9, 0x10, 0x26, 0xc8, 0xf1, 0x42, 0xe2, 0x7a, 0x70, 0x77,
	0xeb, 0x21, 0x3b, 0x5a, 0x4a, 0x02, 0x53, 0x02, 0xe2, 0xc6, 0x24, 0x36, 0xb0, 0x87, 0x8d, 0x01,
	0x01, 0x00, 0x00, 0xff, 0xff, 0x4f, 0x6f, 0x15, 0x0a, 0x03, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// GetMyBuildClient is the client API for GetMyBuild service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type GetMyBuildClient interface {
	MyBuildInfo(ctx context.Context, in *BuildRequest, opts ...grpc.CallOption) (*BuildResponse, error)
}

type getMyBuildClient struct {
	cc *grpc.ClientConn
}

func NewGetMyBuildClient(cc *grpc.ClientConn) GetMyBuildClient {
	return &getMyBuildClient{cc}
}

func (c *getMyBuildClient) MyBuildInfo(ctx context.Context, in *BuildRequest, opts ...grpc.CallOption) (*BuildResponse, error) {
	out := new(BuildResponse)
	err := c.cc.Invoke(ctx, "/grpc_exmp.GetMyBuild/myBuildInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// GetMyBuildServer is the server API for GetMyBuild service.
type GetMyBuildServer interface {
	MyBuildInfo(context.Context, *BuildRequest) (*BuildResponse, error)
}

// UnimplementedGetMyBuildServer can be embedded to have forward compatible implementations.
type UnimplementedGetMyBuildServer struct {
}

func (*UnimplementedGetMyBuildServer) MyBuildInfo(ctx context.Context, req *BuildRequest) (*BuildResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MyBuildInfo not implemented")
}

func RegisterGetMyBuildServer(s *grpc.Server, srv GetMyBuildServer) {
	s.RegisterService(&_GetMyBuild_serviceDesc, srv)
}

func _GetMyBuild_MyBuildInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BuildRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GetMyBuildServer).MyBuildInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc_exmp.GetMyBuild/MyBuildInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GetMyBuildServer).MyBuildInfo(ctx, req.(*BuildRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _GetMyBuild_serviceDesc = grpc.ServiceDesc{
	ServiceName: "grpc_exmp.GetMyBuild",
	HandlerType: (*GetMyBuildServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "myBuildInfo",
			Handler:    _GetMyBuild_MyBuildInfo_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "buildInfo.proto",
}
